import streamlit as st
import pandas as pd
from pathlib import Path

# -----------------------------------------------------------------------------
# Helpers
# -----------------------------------------------------------------------------
@st.cache_data(show_spinner=False)
def load_recommendations(path: str = "user_recommendations.csv") -> pd.DataFrame:
    """Load the flattened ALS user ‚Üí item recommendations CSV.

    Expected columns: [user, book, rating]
    """
    path = Path(path)
    if not path.exists():
        st.error(f"Recommendations file not found at: {path.resolve()}")
        return pd.DataFrame(columns=["user", "book", "rating"])
    return pd.read_csv(path)

# -----------------------------------------------------------------------------
# Main App
# -----------------------------------------------------------------------------

def main():
    st.title("üìö Your next book to read")
    st.markdown(
        "Load 5 recommendations generated by your PySpark ALS model and "
        "quickly look up what to suggest for any user ID."
    )

    data_path = r"C:\Users\k-bur\OneDrive\Documents\Python Scripts\Recommender\user_recommendations.csv"
    # Load data
    recs_df = load_recommendations(data_path)
    if recs_df.empty:
        st.stop()

    # User input
    st.subheader("üîç Look up recommendations")
    user_ids = recs_df["user"].unique()

    user_id = st.selectbox(
        "Select a user ID",
        options=sorted(user_ids),
        index=0,
        format_func=lambda x: str(int(x))
    )

    # Filter and display
    user_recs = (
        recs_df[recs_df["user"] == user_id]
        .sort_values("rating", ascending=False)
        .head(5)
    )

    if user_recs.empty:
        st.warning(f"No recommendations found for user {user_id}.")
    else:
        st.success(f"Top {len(user_recs)} books recommended for user {user_id}:")
        st.table(user_recs[["book", "rating"]].reset_index(drop=True))


if __name__ == "__main__":
    main()
